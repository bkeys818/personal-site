---
interface Props {
  size?: number
}
const { size = 60 } = Astro.props
---

<div class="nav-icon">
  <span></span><span></span><span></span><span></span>
</div>
<style
  define:vars={{
    hamburgerWidth: size + 'px',
    hamburgerHeight: 0.75 * size + 'px',
  }}
  is:global
>
  .nav-icon {
    width: var(--hamburgerWidth);
    height: var(--hamburgerHeight);
    position: relative;
    transform: rotate(0deg);
    transition: 0.5s ease-in-out;
    cursor: pointer;
    margin-top: 0;
    margin-bottom: 0;
  }
  @media (min-width: 640px) {
    .nav-icon {
      display: none;
    }
  }
  .nav-icon span {
    display: block;
    position: absolute;
    height: calc(var(--hamburgerHeight) / 5);
    width: 100%;
    background: theme(colors.secondary);
    border-radius: 9px;
    opacity: 1;
    left: 0;
    transform: rotate(0deg);
    transition: 0.25s ease-in-out;
  }

  .nav-icon span:nth-child(1) {
    top: 0;
  }

  .nav-icon span:nth-child(2),
  .nav-icon span:nth-child(3) {
    top: 40%;
  }

  .nav-icon span:nth-child(4) {
    top: 80%;
  }

  .nav-icon.open span:nth-child(1) {
    top: 40%;
    width: 0%;
    left: 50%;
  }

  .nav-icon.open span:nth-child(2) {
    transform: rotate(45deg);
  }

  .nav-icon.open span:nth-child(3) {
    transform: rotate(-45deg);
  }

  .nav-icon.open span:nth-child(4) {
    top: 40$;
    width: 0%;
    left: 50%;
  }
</style>
