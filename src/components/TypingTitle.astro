---
const staticTitle = "Hi, I'm "
const staticTitleLength = staticTitle.length
---

<div id="typing-title" class="grid place-items-center">
  <div>
    <h1 class="text-xl sm:text-4xl mb-0">{staticTitle + "Ben Keys"}</h1>
  </div>
</div>
<noscript>
  <h1>{staticTitle}Ben Keys</h1>
</noscript>

<style define:vars={{ staticTitleLength }}>
  #typing-title div {
    padding: 0 0.1ch 0.1em 0;
    animation: blink 0.5s step-end infinite alternate;
    border-right: 3px solid;
  }
  #typing-title h1 {
    width: calc(var(--titleLength) * 1ch);
    white-space: nowrap;
    overflow: hidden;
    font-family: monospace;
    animation: typing 5s steps(calc(var(--titleLength) - var(--staticTitleLength)), start) infinite alternate;
  }

  @keyframes typing {
    80% {
      width: calc(var(--titleLength) * 1ch);
    }
    to {
      width: calc(var(--staticTitleLength) * 1ch);
    }
  }

  @keyframes blink {
    50% {
      border-color: transparent;
    }
  }
</style>

<script>
  import { titles } from '@data/portfolio.json'

  const $element: HTMLElement = document.querySelector('#typing-title')!
  const $title = $element.querySelector("h1")!

  let i = 0
  const n = titles.length
  function changeTitle() {
    const title = "Hi, I'm " + titles[(i % n + n) % n]
    $title.textContent = title
    $element.style.setProperty('--titleLength', title.length.toString())
    i++
  }

  changeTitle()
  $title.addEventListener("animationiteration", (event) => {
    // Uses animation duration to only run every other time
    if (event.elapsedTime % 10 == 5) {
      changeTitle()
    }
  });
</script>